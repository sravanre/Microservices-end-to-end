---
- name: Jenkins
  hosts: localhost
  remote_user: ec2-user
  become: true
  
  tasks:

    - name: install dependencies
      yum:
        name: "{{ package }} "
        state: present
      vars:
        package:
        - wget
        - git
        - yum-utils

    - name: install java 11
      shell: "amazon-linux-extras install java-openjdk11"
      become: yes
      ignore_errors: yes

    - name: Download Jenkins Repo
      get_url:
        url: https://pkg.jenkins.io/redhat-stable/jenkins.repo
        dest: /etc/yum.repos.d/jenkins.repo

    - name: Import Jenkins Repo GPG key
      rpm_key:
        state: present
        key: https://pkg.jenkins.io/redhat/jenkins.io-2023.key

    - name: Install Jenkins
      yum:
        name: jenkins
        state: present

    - name: Start and Enable Jenkins
      systemd:
        name: jenkins
        state: started
        enabled: true

    - name: Sleep for 30 seconds and continue with play
      wait_for: timeout=30

    - name: Get init password Jenkins
      shell: cat /var/lib/jenkins/secrets/initialAdminPassword
      changed_when: false
      register: result

    - name: Print init password Jenkins
      debug:
        var: result.stdout

    # - name: Install Docker using Amazon Linux Extras
    #   shell: "amazon-linux-extras install docker"
    #   become: yes
    #   ignore_errors: yes

    - name: Install docker with using the yum module itself 
      yum:
        name: docker
        state: present
      become: yes
      ## TODO :: installing the docker with the yum repo , 
      # i think that already i have java and jenkins up, only i need to figure out docker installation on this , 
    

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes
      become: yes
      ignore_errors: yes

# this didn't work , some error of the source regarding, 
# here is the erro 
#       TASK [Pull the SonarQube container image] **********************************************************************************************************************************
#         fatal: [localhost]: FAILED! => {"changed": false, "msg": "state is present but all of the following are missing: source"}       


# below is the code 
    # - name: Pull the SonarQube container image
    #   docker_image:
    #     name: sonarqube:lts-community
    #   become: yes

    # - name: Run SonarQube container
    #   docker_container:
    #     name: sonar-webui
    #     image: sonarqube:lts-community
    #     ports:
    #       - "9000:9000"
    #     state: started
    #     detach: yes
    #   become: yes

# running with shell is not the best option . 
    - name: Run SonarQube container
      become: true
      shell: docker run -d --name sonar -p 9000:9000 sonarqube:lts-community




